{"version":3,"file":"js/188.6f6aa99f.js","mappings":"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","sources":["webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue?c813","webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue","webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue?0686"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"forecast-card-wrap\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"forecast-card-wrap\"\n}\nconst _hoisted_3 = { class: \"forecast-card\" }\nconst _hoisted_4 = { class: \"forecast-date\" }\nconst _hoisted_5 = { class: \"weather-main\" }\nconst _hoisted_6 = [\"src\", \"alt\"]\nconst _hoisted_7 = { class: \"description\" }\nconst _hoisted_8 = { class: \"forecast-details\" }\nconst _hoisted_9 = {\n  key: 2,\n  class: \"forecast-card-wrap\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (!_ctx.listForecasts.length)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [...(_cache[0] || (_cache[0] = [\n        _createElementVNode(\"div\", { class: \"spinner\" }, null, -1)\n      ]))]))\n    : (_ctx.forecast)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"h2\", _hoisted_4, _toDisplayString(_ctx.formatDate(_ctx.forecast.dt_txt)), 1),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"img\", {\n                src: _ctx.weatherIconUrl(_ctx.forecast.weather[0].icon),\n                alt: _ctx.forecast.weather[0].description\n              }, null, 8, _hoisted_6),\n              _createElementVNode(\"p\", _hoisted_7, _toDisplayString(_ctx.forecast.weather[0].description), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_8, [\n              _createElementVNode(\"li\", null, [\n                _cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"Температура:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(Math.round(_ctx.forecast.main.temp)) + \"°C \", 1),\n                _createElementVNode(\"small\", null, \"(ощущается как \" + _toDisplayString(Math.round(_ctx.forecast.main.feels_like)) + \"°C)\", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"Ветер:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(Math.round(_ctx.forecast.wind.speed)) + \" м/с, \" + _toDisplayString(_ctx.windDirection(_ctx.forecast.wind.deg)), 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"Влажность:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.forecast.main.humidity) + \"% \", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Давление:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.pressureMmHg(_ctx.forecast.main.pressure)) + \" мм рт. ст. \", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"Облачность:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.forecast.clouds?.all) + \"% \", 1)\n              ])\n            ])\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [...(_cache[6] || (_cache[6] = [\n          _createElementVNode(\"p\", null, \"Прогноз не найден.\", -1)\n        ]))]))\n}","<template>\n  <div class=\"forecast-card-wrap\" v-if=\"!listForecasts.length\">\n    <div class=\"spinner\"></div>\n  </div>\n\n  <div class=\"forecast-card-wrap\" v-else-if=\"forecast\">\n    <div class=\"forecast-card\">\n      <h2 class=\"forecast-date\">{{ formatDate(forecast.dt_txt) }}</h2>\n\n      <div class=\"weather-main\">\n        <img :src=\"weatherIconUrl(forecast.weather[0].icon)\" :alt=\"forecast.weather[0].description\" />\n        <p class=\"description\">{{ forecast.weather[0].description }}</p>\n      </div>\n\n      <ul class=\"forecast-details\">\n        <li>\n          <span>Температура:</span>\n          {{ Math.round(forecast.main.temp) }}°C\n          <small>(ощущается как {{ Math.round(forecast.main.feels_like) }}°C)</small>\n        </li>\n        <li>\n          <span>Ветер:</span>\n          {{ Math.round(forecast.wind.speed) }} м/с,\n          {{ windDirection(forecast.wind.deg) }}\n        </li>\n        <li>\n          <span>Влажность:</span>\n          {{ forecast.main.humidity }}%\n        </li>\n        <li>\n          <span>Давление:</span>\n          {{ pressureMmHg(forecast.main.pressure) }} мм рт. ст.\n        </li>\n        <li>\n          <span>Облачность:</span>\n          {{ forecast.clouds?.all }}%\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"forecast-card-wrap\" v-else>\n    <p>Прогноз не найден.</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport BlockWrap from \"@/components/Common/BlockWrap.vue\";\nimport { type DestinationStoreType, useDestinationStore } from \"@/store/DestinationStore\";\nimport { defineComponent } from \"vue\";\nimport { ForecastListItem } from \"@/interfaces/forecast\";\n\nexport default defineComponent({\n  name: \"ForecastPageItem\",\n  components: { BlockWrap },\n  props: {\n    slug: { type: String, required: true },\n  },\n  computed: {\n    destinationStore(): DestinationStoreType {\n      return useDestinationStore();\n    },\n    listForecasts(): ForecastListItem[] | null {\n      return this.destinationStore.listForecasts?.list || [];\n    },\n    forecast(): ForecastListItem | null {\n      if (!this.listForecasts || this.listForecasts.length === 0) {\n        return null;\n      }\n      const dtTxt: string = this.slugToDtTxt(this.slug);\n      return this.listForecasts.find((elem) => elem.dt_txt === dtTxt) || null;\n    },\n  },\n  methods: {\n    slugToDtTxt(slug: string): string {\n      return slug.slice(0, 10) + \" \" + slug.slice(11);\n    },\n    formatDate(dateStr: string): string {\n      const options: Intl.DateTimeFormatOptions = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      };\n      return new Date(dateStr).toLocaleDateString(\"ru-RU\", options);\n    },\n    windDirection(deg: number): string {\n      const dirs = [\n        \"северный\",\n        \"северо-восточный\",\n        \"восточный\",\n        \"юго-восточный\",\n        \"южный\",\n        \"юго-западный\",\n        \"западный\",\n        \"северо-западный\",\n      ];\n      const index = Math.round(deg / 45) % 8;\n      return dirs[index];\n    },\n    pressureMmHg(hPa: number): number {\n      return Math.round(hPa * 0.75006);\n    },\n    weatherIconUrl(iconCode: string): string {\n      return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    },\n  },\n  mounted() {\n    document.title = `Прогноз погоды на 5 дней — ${this.slug}`;\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.forecast-card-wrap {\n  margin: 10px 20px;\n  box-sizing: border-box;\n}\n\n.forecast-card {\n  background-color: $white_color;\n  border-radius: 12px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  color: $gray_color;\n  max-width: 620px;\n  width: 100%;\n  margin: 0 auto;\n\n  .forecast-date {\n    color: $main_color;\n    font-size: 20px;\n    margin-bottom: 15px;\n\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n\n  .weather-main {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 15px;\n    margin-bottom: 20px;\n\n    img {\n      width: 60px;\n      height: 60px;\n    }\n\n    .description {\n      font-size: 18px;\n      color: $additional_color;\n      text-transform: capitalize;\n    }\n  }\n\n  .forecast-details {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n\n    li {\n      margin-bottom: 10px;\n      font-size: 16px;\n\n      span {\n        color: $main_color;\n        font-weight: bold;\n        margin-right: 5px;\n      }\n\n      small {\n        color: $light_color;\n        margin-left: 5px;\n      }\n    }\n  }\n}\n\n.spinner {\n  margin: 50px auto;\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid $main_color;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n","import { render } from \"./ForecastPageItem.vue?vue&type=template&id=c8a3da74&scoped=true&ts=true\"\nimport script from \"./ForecastPageItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ForecastPageItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ForecastPageItem.vue?vue&type=style&index=0&id=c8a3da74&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c8a3da74\"]])\n\nexport default __exports__"],"names":["_hoisted_1","key","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","listForecasts","length","forecast","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","formatDate","dt_txt","src","weatherIconUrl","weather","icon","alt","description","_createTextVNode","Math","round","main","temp","feels_like","wind","speed","windDirection","deg","humidity","pressureMmHg","pressure","clouds","all","defineComponent","name","components","BlockWrap","props","slug","type","String","required","computed","destinationStore","useDestinationStore","this","list","dtTxt","slugToDtTxt","find","elem","methods","slice","dateStr","options","weekday","year","month","day","hour","minute","Date","toLocaleDateString","dirs","index","hPa","iconCode","mounted","document","title","__exports__"],"sourceRoot":""}