{"version":3,"file":"js/216.4d1c3468.js","mappings":"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","sources":["webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue?0b31","webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue","webpack://weather-project-vue3/./src/components/UI/BaseButton.vue?08eb","webpack://weather-project-vue3/./src/components/UI/BaseButton.vue","webpack://weather-project-vue3/./src/components/UI/BaseButton.vue?0ecc","webpack://weather-project-vue3/./src/components/Features/Forecast/ForecastPageItem.vue?0686"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"forecast-card-wrap\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"forecast-card-wrap\"\n}\nconst _hoisted_3 = { class: \"forecast-card\" }\nconst _hoisted_4 = { class: \"forecast-date\" }\nconst _hoisted_5 = { class: \"weather-main\" }\nconst _hoisted_6 = [\"src\", \"alt\"]\nconst _hoisted_7 = { class: \"description\" }\nconst _hoisted_8 = { class: \"forecast-details\" }\nconst _hoisted_9 = {\n  key: 2,\n  class: \"forecast-card-wrap\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_button = _resolveComponent(\"base-button\")!\n\n  return (!_ctx.listForecasts.length)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [...(_cache[0] || (_cache[0] = [\n        _createElementVNode(\"div\", { class: \"spinner\" }, null, -1)\n      ]))]))\n    : (_ctx.forecast)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"h2\", _hoisted_4, _toDisplayString(_ctx.formatDate(_ctx.forecast.dt_txt)), 1),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"img\", {\n                src: _ctx.weatherIconUrl(_ctx.forecast.weather[0].icon),\n                alt: _ctx.forecast.weather[0].description\n              }, null, 8, _hoisted_6),\n              _createElementVNode(\"p\", _hoisted_7, _toDisplayString(_ctx.forecast.weather[0].description), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_8, [\n              _createElementVNode(\"li\", null, [\n                _cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"Температура:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(Math.round(_ctx.forecast.main.temp)) + \"°C \", 1),\n                _createElementVNode(\"small\", null, \"(ощущается как \" + _toDisplayString(Math.round(_ctx.forecast.main.feels_like)) + \"°C)\", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"Ветер:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(Math.round(_ctx.forecast.wind.speed)) + \" м/с, \" + _toDisplayString(_ctx.windDirection(_ctx.forecast.wind.deg)), 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"Влажность:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.forecast.main.humidity) + \"% \", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Давление:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.pressureMmHg(_ctx.forecast.main.pressure)) + \" мм рт. ст. \", 1)\n              ]),\n              _createElementVNode(\"li\", null, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"Облачность:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(_ctx.forecast.clouds?.all) + \"% \", 1)\n              ])\n            ])\n          ]),\n          _createVNode(_component_base_button, { onClick: _ctx.goBack }, {\n            default: _withCtx(() => [...(_cache[6] || (_cache[6] = [\n              _createTextVNode(\"Назад\", -1)\n            ]))]),\n            _: 1\n          }, 8, [\"onClick\"])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [...(_cache[7] || (_cache[7] = [\n          _createElementVNode(\"p\", null, \"Прогноз не найден.\", -1)\n        ]))]))\n}","<template>\n  <div class=\"forecast-card-wrap\" v-if=\"!listForecasts.length\">\n    <div class=\"spinner\"></div>\n  </div>\n\n  <div class=\"forecast-card-wrap\" v-else-if=\"forecast\">\n    <div class=\"forecast-card\">\n      <h2 class=\"forecast-date\">{{ formatDate(forecast.dt_txt) }}</h2>\n\n      <div class=\"weather-main\">\n        <img :src=\"weatherIconUrl(forecast.weather[0].icon)\" :alt=\"forecast.weather[0].description\" />\n        <p class=\"description\">{{ forecast.weather[0].description }}</p>\n      </div>\n\n      <ul class=\"forecast-details\">\n        <li>\n          <span>Температура:</span>\n          {{ Math.round(forecast.main.temp) }}°C\n          <small>(ощущается как {{ Math.round(forecast.main.feels_like) }}°C)</small>\n        </li>\n        <li>\n          <span>Ветер:</span>\n          {{ Math.round(forecast.wind.speed) }} м/с,\n          {{ windDirection(forecast.wind.deg) }}\n        </li>\n        <li>\n          <span>Влажность:</span>\n          {{ forecast.main.humidity }}%\n        </li>\n        <li>\n          <span>Давление:</span>\n          {{ pressureMmHg(forecast.main.pressure) }} мм рт. ст.\n        </li>\n        <li>\n          <span>Облачность:</span>\n          {{ forecast.clouds?.all }}%\n        </li>\n      </ul>\n    </div>\n    <base-button @click=\"goBack\">Назад</base-button>\n  </div>\n\n  <div class=\"forecast-card-wrap\" v-else>\n    <p>Прогноз не найден.</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport BlockWrap from \"@/components/Common/BlockWrap.vue\";\nimport { type DestinationStoreType, useDestinationStore } from \"@/store/DestinationStore\";\nimport { defineComponent } from \"vue\";\nimport { ForecastListItem } from \"@/interfaces/forecast\";\nimport BaseButton from \"@/components/UI/BaseButton.vue\";\n\nexport default defineComponent({\n  name: \"ForecastPageItem\",\n  components: { BaseButton, Button: BaseButton, BlockWrap },\n  props: {\n    slug: { type: String, required: true },\n  },\n  computed: {\n    destinationStore(): DestinationStoreType {\n      return useDestinationStore();\n    },\n    listForecasts(): ForecastListItem[] | null {\n      return this.destinationStore.listForecasts?.list || [];\n    },\n    forecast(): ForecastListItem | null {\n      if (!this.listForecasts || this.listForecasts.length === 0) {\n        return null;\n      }\n      const dtTxt: string = this.slugToDtTxt(this.slug);\n      return this.listForecasts.find((elem) => elem.dt_txt === dtTxt) || null;\n    },\n  },\n  methods: {\n    slugToDtTxt(slug: string): string {\n      return slug.slice(0, 10) + \" \" + slug.slice(11);\n    },\n    formatDate(dateStr: string): string {\n      const options: Intl.DateTimeFormatOptions = {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      };\n      return new Date(dateStr).toLocaleDateString(\"ru-RU\", options);\n    },\n    windDirection(deg: number): string {\n      const dirs = [\n        \"северный\",\n        \"северо-восточный\",\n        \"восточный\",\n        \"юго-восточный\",\n        \"южный\",\n        \"юго-западный\",\n        \"западный\",\n        \"северо-западный\",\n      ];\n      const index = Math.round(deg / 45) % 8;\n      return dirs[index];\n    },\n    pressureMmHg(hPa: number): number {\n      return Math.round(hPa * 0.75006);\n    },\n    weatherIconUrl(iconCode: string): string {\n      return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    },\n    goBack() {\n      this.$router.back();\n    },\n  },\n  mounted() {\n    document.title = `Прогноз погоды на 5 дней — ${this.slug}`;\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.forecast-card-wrap {\n  margin: 10px 20px;\n  box-sizing: border-box;\n}\n\n.forecast-card {\n  background-color: $white_color;\n  border-radius: 12px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  color: $gray_color;\n  max-width: 620px;\n  width: 100%;\n  margin: 0 auto;\n\n  .forecast-date {\n    color: $main_color;\n    font-size: 20px;\n    margin-bottom: 15px;\n\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n\n  .weather-main {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 15px;\n    margin-bottom: 20px;\n\n    img {\n      width: 60px;\n      height: 60px;\n    }\n\n    .description {\n      font-size: 18px;\n      color: $additional_color;\n      text-transform: capitalize;\n    }\n  }\n\n  .forecast-details {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n\n    li {\n      margin-bottom: 10px;\n      font-size: 16px;\n\n      span {\n        color: $main_color;\n        font-weight: bold;\n        margin-right: 5px;\n      }\n\n      small {\n        color: $light_color;\n        margin-left: 5px;\n      }\n    }\n  }\n}\n\n.spinner {\n  margin: 50px auto;\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid $main_color;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"button-wrap\" }\nconst _hoisted_2 = { class: \"button-block\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", _hoisted_2, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ])\n  ]))\n}","<template>\n  <div class=\"button-wrap\">\n    <button class=\"button-block\">\n      <slot />\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"BaseButton\",\n});\n</script>\n\n<style scoped lang=\"scss\">\n.button-wrap {\n  width: clamp(120px, 10%, 140px);\n  margin: 40px auto;\n}\n\n.button-block {\n  border: none;\n  border-radius: 5%;\n  outline: none;\n  font-size: 18px;\n  line-height: 120%;\n  width: 100%;\n  padding: 5px 7px;\n  box-sizing: border-box;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  background: $white_color;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    background: $light_color;\n    opacity: 0.55;\n    width: 0;\n    height: 0;\n    top: 0;\n    left: 0;\n    transition: 0.22s;\n    border-radius: 50%;\n  }\n\n  &:hover::before {\n    width: 100%;\n    height: 100%;\n    transform: scale(1.7);\n    transition: 0.3s;\n  }\n}\n</style>\n","import { render } from \"./BaseButton.vue?vue&type=template&id=7c6299a9&scoped=true&ts=true\"\nimport script from \"./BaseButton.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseButton.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseButton.vue?vue&type=style&index=0&id=7c6299a9&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c6299a9\"]])\n\nexport default __exports__","import { render } from \"./ForecastPageItem.vue?vue&type=template&id=d93538d8&scoped=true&ts=true\"\nimport script from \"./ForecastPageItem.vue?vue&type=script&lang=ts\"\nexport * from \"./ForecastPageItem.vue?vue&type=script&lang=ts\"\n\nimport \"./ForecastPageItem.vue?vue&type=style&index=0&id=d93538d8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d93538d8\"]])\n\nexport default __exports__"],"names":["_hoisted_1","key","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","_component_base_button","_resolveComponent","listForecasts","length","forecast","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","formatDate","dt_txt","src","weatherIconUrl","weather","icon","alt","description","_createTextVNode","Math","round","main","temp","feels_like","wind","speed","windDirection","deg","humidity","pressureMmHg","pressure","clouds","all","_createVNode","onClick","goBack","default","_withCtx","_","_renderSlot","$slots","undefined","defineComponent","name","__exports__","components","BaseButton","Button","BlockWrap","props","slug","type","String","required","computed","destinationStore","useDestinationStore","this","list","dtTxt","slugToDtTxt","find","elem","methods","slice","dateStr","options","weekday","year","month","day","hour","minute","Date","toLocaleDateString","dirs","index","hPa","iconCode","$router","back","mounted","document","title"],"sourceRoot":""}